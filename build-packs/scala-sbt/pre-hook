#!/bin/bash

##
# Python dependencies hook.
#

function abortIfNonZero() {
    # @param $1 command return code/exit status (e.g. $?, '0', '1').
    # @param $2 error message if exit status was non-zero.
    local rc=$1
    local what=$2
    test $rc -ne 0 && echo "error: ${what} exited with non-zero status ${rc}" >> /app/out && exit $rc || :
}

cd /app/src
abortIfNonZero $? 'Changing directory to "/app/src"'

dependenciesPath='/app/.shipbuilder'

test ! -d "${dependenciesPath}" && mkdir "${dependenciesPath}"

# Support sbt-assembly deployments, @see https://github.com/sbt/sbt-assembly for more information.
if test -e 'assembly.sbt'; then
    echo '--> sbt-assembly detected' >> /app/out
    echo '--> fetching dependencies and building app jar' >> /app/out
    stdbuf -o0 sbt assembly >> /app/out
    rc=$?
    abortIfNonZero $rc 'sbt-assembly build failed'
else
    echo '--> fetching dependencies and compiling app' >> /app/out
    stdbuf -o0 sbt compile >> /app/out
    rc=$?
    abortIfNonZero $rc 'Project compilation failed'
fi

echo "RETURN_CODE: ${rc}" >> /app/out
exit $rc
